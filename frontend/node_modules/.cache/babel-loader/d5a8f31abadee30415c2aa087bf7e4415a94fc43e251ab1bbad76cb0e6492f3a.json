{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GH\\\\lrbp-blog\\\\src\\\\pages\\\\crudop.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CRUDOp() {\n  _s();\n  const list = [{\n    id: 1,\n    username: \"laqube\",\n    email: \"example1@astanait.edu.kz\",\n    role: \"admin\",\n    password: \"Qqwerty1!\"\n  }, {\n    id: 2,\n    username: \"homyak\",\n    email: \"example2@astanait.edu.kz\",\n    role: \"admin\",\n    password: \"Qqwerty1!\"\n  }, {\n    id: 3,\n    username: \"John Doe\",\n    email: \"example3@astanait.edu.kz\",\n    role: \"user\",\n    password: \"Doe667\"\n  }];\n  const [lists, setList] = useState(list);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddList, {\n      setList: setList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: list.map(current => /*#__PURE__*/_jsxDEV(\"tr\", {\n        sx: {\n          height: '100%'\n        },\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: current.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: current.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: current.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: current.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"success\",\n            sx: {\n              mx: 0.5\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            sx: {\n              mx: 0.5\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(CRUDOp, \"S6546iDOz/w1CwyEGy6XTzYh8HE=\");\n_c = CRUDOp;\nfunction AddList(_ref) {\n  _s2();\n  let {\n    setList\n  } = _ref;\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const roleRef = useRef();\n  const passowrdRef = useRef();\n  function handleSubmit(event) {\n    event.preventDefault();\n    const username = event.target.elements.username.value;\n    const email = event.target.elements.email.value;\n    const role = event.target.elements.role.value;\n    const password = event.target.elements.password.value;\n    const newlist = {\n      id: 4,\n      username,\n      email,\n      role,\n      password\n    };\n    setList(prevList => {\n      return prevList.concat(newlist);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Enter Username\",\n      ref: usernameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Enter Email\",\n      ref: emailRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"role\",\n      placeholder: \"Enter The Role\",\n      ref: roleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"passowrd\",\n      placeholder: \"Enter Password\",\n      ref: passwordRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s2(AddList, \"uT/blo4heFYsNQDwSwunzBh2ojw=\");\n_c2 = AddList;\nexport default CRUDOp;\nvar _c, _c2;\n$RefreshReg$(_c, \"CRUDOp\");\n$RefreshReg$(_c2, \"AddList\");","map":{"version":3,"names":["React","useRef","useState","Button","TextField","CRUDOp","list","id","username","email","role","password","lists","setList","map","current","height","mx","AddList","usernameRef","emailRef","roleRef","passowrdRef","handleSubmit","event","preventDefault","target","elements","value","newlist","prevList","concat","passwordRef"],"sources":["C:/Users/User/Desktop/GH/lrbp-blog/src/pages/crudop.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nfunction CRUDOp(){\r\n    const list=[\r\n        {\r\n            id: 1,\r\n            username: \"laqube\",\r\n            email:\"example1@astanait.edu.kz\",\r\n            role:\"admin\",\r\n            password: \"Qqwerty1!\"\r\n        },\r\n        {\r\n            id:2,\r\n            username: \"homyak\",\r\n            email:\"example2@astanait.edu.kz\",\r\n            role:\"admin\",\r\n            password: \"Qqwerty1!\"\r\n            \r\n        },\r\n        {\r\n            id:3,\r\n            username: \"John Doe\",\r\n            email:\"example3@astanait.edu.kz\",\r\n            role:\"user\",\r\n            password: \"Doe667\"\r\n        },\r\n    ]\r\n     \r\n    const [lists, setList] = useState(list)\r\n    \r\n    return(\r\n        <div>\r\n            <AddList setList = {setList}/>\r\n            <table>\r\n                {\r\n                    list.map((current)=>(\r\n                        <tr sx={{ height: '100%' }}\r\n                            direction=\"row\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}>\r\n                            <td>{current.username}</td>\r\n                            <td>{current.email}</td>\r\n                            <td>{current.role}</td>\r\n                            <td>{current.password}</td>\r\n                            <td>\r\n                                <Button variant=\"outlined\" color=\"success\" sx={{ mx: 0.5 }}>Edit</Button>\r\n                                <Button variant=\"outlined\" color=\"error\" sx={{ mx: 0.5 }}>Delete</Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </table>\r\n        </div>    \r\n        \r\n    )\r\n} \r\n\r\nfunction AddList({setList}){\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const roleRef = useRef()\r\n    const passowrdRef = useRef()\r\n\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        const username = event.target.elements.username.value;\r\n        const email = event.target.elements.email.value;\r\n        const role = event.target.elements.role.value;\r\n        const password = event.target.elements.password.value;\r\n        const newlist ={\r\n            id: 4,\r\n            username,\r\n            email,\r\n            role,\r\n            password\r\n        }\r\n        setList((prevList)=>{\r\n            return prevList.concat(newlist)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            {/* <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              type=\"text\" name=\"username\" placeholder='Enter Username' \r\n              autoComplete=\"name\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              type=\"text\" name=\"email\" placeholder='Enter Email'\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"role\"\r\n              label=\"Role\"\r\n              type=\"text\" name=\"role\" placeholder='Enter The Role'\r\n              autoComplete=\"role\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"text\" name=\"passowrd\" placeholder='Enter Password' \r\n              autoComplete=\"\"\r\n              autoFocus\r\n            />\r\n            \r\n            <Button type=\"submit\" \r\n                    onClick={\"submit\"}\r\n                    variant=\"outlined\" \r\n                    color=\"success\"\r\n                    sx={{mx: 1}}\r\n                    >Add</Button> */}\r\n            <input type=\"text\" name=\"username\" placeholder='Enter Username' ref={usernameRef}/>\r\n            <input type=\"text\" name=\"email\" placeholder='Enter Email' ref={emailRef} />\r\n            <input  type=\"text\" name=\"role\" placeholder='Enter The Role' ref={roleRef}/>\r\n            <input type=\"text\" name=\"passowrd\" placeholder='Enter Password' ref={passwordRef}/>\r\n            <button type=\"submit\">add</button>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CRUDOp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}